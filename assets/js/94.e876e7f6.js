(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{277:function(t,a,e){"use strict";e.r(a);var r=e(0),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"关于代码规范推行的思考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于代码规范推行的思考","aria-hidden":"true"}},[t._v("#")]),t._v(" 关于代码规范推行的思考")]),t._v(" "),e("h2",{attrs:{id:"背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#背景","aria-hidden":"true"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),e("p",[t._v("最近要在团队内部开始尝试推行代码规范。")]),t._v(" "),e("p",[t._v("在最近的两个团队中，推行代码规范这件事情，也是自己上手去做的。在第一个团队中由于规模比较小，又都是合作很久的小伙伴，所以推行起来顺风顺水，只是会有些问题需要解决而已。但当前所在的团队比较特殊，是由集团的两个子公司下的两个团队组合而成的共建团队，所以会存在一个尴尬的点：如何让另外一个团队的成员去相信你。")]),t._v(" "),e("h2",{attrs:{id:"规划"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规划","aria-hidden":"true"}},[t._v("#")]),t._v(" 规划")]),t._v(" "),e("p",[t._v("目前思考的几个阶段：")]),t._v(" "),e("p",[t._v("第一阶段：调查清楚目前团队的项目代码规范情况（eslint/stylelint/prettier/sonar在各个项目中的运行情况）在自己当前迭代负责的项目（目前没有开启代码规范检查）上加入代码规范检查工具。")]),t._v(" "),e("p",[t._v("第二阶段：了解各个项目的情况之后，通过投票及扫描已有代码的方式，选出团队中最习惯的一些关键代码风格，如缩进、分号、换行、导入导出等，制定一个完整的代码规范体系，召开前端团队会议宣读并讨论，最终定稿，输出文档。")]),t._v(" "),e("p",[t._v("第三阶段：通过上面输出的文档，推行。")]),t._v(" "),e("h2",{attrs:{id:"需要注意的点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需要注意的点","aria-hidden":"true"}},[t._v("#")]),t._v(" 需要注意的点")]),t._v(" "),e("ul",[e("li",[t._v("已有代码在进行合并时如果产生冲突，会导致大量代码出现lint问题，要如何解决？")]),t._v(" "),e("li",[t._v("是否通过函数备注作者的方式来实现开发者区分？过于粗暴，且对于代码行级别无法识别。")])])])}],!1,null,null,null);a.default=s.exports}}]);